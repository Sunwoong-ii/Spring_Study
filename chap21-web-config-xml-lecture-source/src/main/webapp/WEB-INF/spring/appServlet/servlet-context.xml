<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 
		SpringMVC 컴포넌트들을 디폴트 설정을 통해 활성화한다는 의미
		@Controller에 요청을 보내기 위해 필요한 HandlerMapping과 HandlerAdapter를 Bean으로 등록한다.
		- HandlerMapping : HTTP 요청 정보를 이용해서 컨트롤러를 찾아주는 기능
		- HandlerAdapter : HandlerMapping 을 통해 찾은 컨트롤러를 직접 실행하는 기능을 수행
	 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 
		모든 요청은 Spring MVC의 영향을 받아 viewResolve가 해석한 뷰로 결과를 위임한다.
		하지만 css, js 등 적적 리소스에 대해서도 viewResolve가 뷰로 해석하게 되면 존재하지 않은 리소스에 접근하게 된다.
		이 때 resource경로로 설정해둔 경로는 직접 해당경로에 resource요청을 할 수 있도록 해준다.
	 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 스프링 MVC에서는 JSP,HTML, PDF 엑셀 워크시트, XML, JSON 등 각종 서드파티 뷰 구현체 등 여러가지 표현 기술별 다양한 뷰를 준비하고 있다.
		그 중 JSP 템플릿 뷰를 사용하기 위해 핸들러가 논리적 뷰 이름을 DispatcharServlet이 반환받으면 prefix와 suffix
		에 해당하는 문자열을 앞 뒤에 붙여 클라이언트에게 렌더링할 뷰의 구현체로 해석하게 된다.
		해당 뷰로 처리가 위임(forward)된다.
	 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.greedy.xml" />
	
</beans:beans>
